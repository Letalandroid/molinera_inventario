// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int             @id @default(autoincrement())
  title         String
  description   String?         @db.VarChar(1500)
  price         Float?
  stock         Int             // cantidad actual
  minStock      Int             // para alertas de bajo stock
  location      String?         // ubicación en almacén
  createdAt     DateTime        @default(now())
  isActive      Boolean         @default(true)
  categoryId    Int?
  providerId    Int?
  Category      Category?       @relation(fields: [categoryId], references: [id])
  Provider      Provider?       @relation(fields: [providerId], references: [id])
  Movements     Movement[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
}

model Provider {
  id        Int       @id @default(autoincrement())
  name      String
  contact   String?
  products  Product[]
}

model Movement {
  id          Int       @id @default(autoincrement())
  type        MovementType
  quantity    Int
  date        DateTime  @default(now())
  productId   Int
  userId      Int
  Product     Product   @relation(fields: [productId], references: [id])
  User        User      @relation(fields: [userId], references: [id])
}

enum MovementType {
  INGRESO
  SALIDA
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      Role      @default(EMPLEADO)
  isActive  Boolean   @default(false)
  createdAt DateTime  @default(now())
  Profile   Profile?
  Movements Movement[]
  AuditLogs AuditLog[]
}

model Profile {
  user_id Int    @id
  user    User   @relation(fields: [user_id], references: [id])
  dni     String
  name    String @db.VarChar(50)
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  userId    Int
  action    String   @db.VarChar(255)
  timestamp DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
}

enum Role {
  ADMINISTRADOR
  EMPLEADO
}

